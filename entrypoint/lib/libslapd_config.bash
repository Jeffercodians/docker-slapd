#!/usr/bin/env bash

set -ueo pipefail

__private__.load_schema() {
    local schema="${1:-"core"}"
    local source_schema_dir="${2:-${SLAPD_INSTALL_DIR}/etc/openldap/schema}"
    local user_schema_dir="${SLAPD_CONFIG_DIR}/schema"
    local schema_file="${user_schema_dir}/${schema}.schema"

    # If the schema already exists, do not override what may be user config
    [ -f "${schema_file}" ] || {
        [ -f "${source_schema_dir}/${schema}.schema" ] &&
        mkdir -p "${user_schema_dir}" &&
        cp "${source_schema_dir}/${schema}.schema" "${schema_file}"
    } &&
    echo "include		\"${schema_file}\"" >> "${SLAPD_CONFIG_FILE}"
}

__private__.mdb_config_from_env() {
    echo "suffix		\"${SLAPD_LDAP_SUFFIX}\"" >> "${SLAPD_CONFIG_FILE}" &&
    # 1 Gb = 1024 * 1024 * 1024 = 1073741824
    echo "maxsize		1073741824" >> "${SLAPD_CONFIG_FILE}" &&
    echo "directory		\"${SLAPD_DATA_DIR}\"" >> "${SLAPD_CONFIG_FILE}" &&
    echo "index		objectClass eq" >> "${SLAPD_CONFIG_FILE}" &&
    echo "rootdn		\"cn=root,${SLAPD_LDAP_SUFFIX}\"" >> "${SLAPD_CONFIG_FILE}" &&
    if [ -f "${SLAPD_ROOTDN_SECRET_FILE-}" ]; then
        echo "rootpw		\"$(cat "${SLAPD_ROOTDN_SECRET_FILE}")\"" >> "${SLAPD_CONFIG_FILE}"
    fi
}

__private__.setup_db() {
    local db_type="${1}"

    echo "database		${db_type}" >> "${SLAPD_CONFIG_FILE}" &&
    case "${db_type}" in
    mdb)
    __private__.mdb_config_from_env
    ;;
    esac
}

__private__.pidfile() {
    echo "pidfile		\"${SLAPD_RUN_DIR}/slapd.pid\"" >> "${SLAPD_CONFIG_FILE}"
}

slapd_config.generate() {
    declare -g SLAPD_CONFIG_FILE="${1}"
    cat <<EOM > "${SLAPD_CONFIG_FILE}"
# slapd.conf - slapd configuration file
#
# This file is automatically generated by the entrypoint script.  Any changes
# made will be overwritten on the next run.  Please configure the slapd daemon
# using environment variables or config files at the docker container level.

EOM

    # There are many available "default schemas" built into the OpenLDAP
    #   installation; we need the core implementation of LDAPv3
    #   (aka RFC2252/RFC2256)
    __private__.load_schema "core" &&
    __private__.pidfile &&

    __private__.setup_db config &&

    __private__.setup_db mdb &&

    chown "${SLAPD_USER}:${SLAPD_GROUP}" "${SLAPD_CONFIG_FILE}"
}
